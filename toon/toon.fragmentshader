#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;

// Ouput data
out vec3 color;

uniform sampler2D NormalTextureSampler;
uniform vec3 LightPosition_worldspace;

void main()
{

	vec3 TextureNormal_tangentspace = normalize(texture( NormalTextureSampler, vec2(UV.x,-UV.y) ).rgb*2.0 - 1.0);
	
	// Normal of the computed fragment, in camera space
	vec3 n = TextureNormal_tangentspace;
  
  float intensity = dot(LightPosition_worldspace,n);
  if (intensity > 0.95)
		color = vec3(1.5,1.1,0.9);
  if (intensity > 0.80)
		color = vec3(1.4,1.0,0.8);
  else if (intensity > 0.75)
    color = vec3(1.0,0.9,0.7);
  else if (intensity > 0.60)
    color = vec3(0.9,0.8,0.6);
	else if (intensity > 0.5)
		color = vec3(0.8,0.7,0.5);
	else if (intensity > 0.25)
		color = vec3(0.6,0.5,0.3);
	else if (intensity > 0.10)
		color = vec3(0.5,0.4,0.2);
  else if (intensity > 0.05)
		color = vec3(0.4,0.3,0.2);
  else if (intensity > 0.025)
		color = vec3(0.35,0.25,0.15);
  else
		color = vec3(0.3,0.2,0.1);

}